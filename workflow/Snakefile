
# import required libraries
from snakemake.utils import min_version

##### set minimum snakemake version #####
min_version("8.4.1")

# read the configuration file
configfile: "config/configuration.yml"
#------------------------#

# Read configuration from user input
#DATA_FILES = config["phenotype_files"].split(",")

include: "rules/common.smk"

# Get loci and data types from the input file
#LOCI = parse_loci(config["path_loci"])
#PHENO_PATHS = parse_phenotype(config["phenotype_files"]) # Get phenotype file paths

#------------------------#
from datetime import date

today = date.today()
my_date = today.strftime('%d-%b-%y')
#print("Today is:", formatted_date)
#------------------------#

# functions
def get_mem_mb(wildcards, attempt):
    return 66672 + attempt * 4096

def get_mem_plt(wildcards, attempt):
    return 2192 + attempt * 2048

def higher_time(wildcards, attempt):
    return 1 + attempt * 2
#------------------------#

# a pseudo-rule that collects the target files
rule all:
	input:
		#expand("results/genotype/{locus}.vcf.gz", locus = analytes.locus),
		#expand("results/dosage/{locus}.dosage", locus = analytes.locus),
		#expand("results/annotation/{locus}.snps", locus = analytes.locus),
		#expand("results/annotation/{locus}_summary.tsv", locus = analytes.locus),
		#expand("results/annotation/{locus}_output.json", locus = analytes.locus),
		expand("results/plot_annotation/{locus}.png", locus = analytes.locus),
		#expand("results/merged_data/{locus}_{dataset}_merged_data.RDS", locus = analytes.locus, dataset = df.data_type),
		#expand("results/plot_histogram/{locus}_plot_histo.png", locus = loci),
		#expand("results/plot_gene/{locus}_plot_gene.png", locus = loci),
		#expand("results/report/{locus}_merged_data_summary.txt", locus = loci),
		#expand("results/result_associations/{locus}_{dataset}_association_results.RDS", locus = analytes.locus, dataset=df.data_type),
		expand("results/plot_haplotypes/{locus}_{dataset}_plot_haplotypes.png", locus = analytes.locus, dataset = df.data_type),
		expand("results/plot_heatmaps/{locus}_{dataset}_plot_heatmap.png", locus = analytes.locus, dataset=df.data_type),
		#expand("results/result_tidied/{locus}_{dataset}_association_results_tidied.RDS", locus = analytes.locus, dataset=df.data_type),
		#expand("results/report_html/{locus}_report.html", locus = loci)


include: "rules/get_locus.smk"
include: "rules/get_dosage.smk"
include: "rules/annotate_variants.smk"
#include: "rules/plot_histogram.smk"
include: "rules/plot_annotation.smk"
#include: "rules/plot_gene.smk"
include: "rules/merge_data.smk"
include: "rules/build_haplotype.smk"
include: "rules/plot_haplotype.smk"
include: "rules/plot_association.smk"
